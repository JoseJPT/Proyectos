CCS PCM C Compiler, Version 5.015, 5967               27-ene.-25 11:17

               Filename:   C:\Users\Joss\Desktop\Meca\Programacion\Codigos pic\OBS.lst

               ROM used:   175 words (2%)
                           Largest free fragment is 2048
               RAM used:   9 (2%) at main() level
                           9 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses hs,nowdt 
.................... #USE DELAY (CLOCK = 20M) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... #define A1 PIN_A1 
.................... #define A2 PIN_A2 
.................... #define A3 PIN_A3 
.................... #define A4 PIN_A4 
....................  
.................... #define B1 PIN_B1 
.................... #define B2 PIN_B2 
.................... #define B3 PIN_B3 
.................... #define B4 PIN_B4 
....................  
.................... void main() { 
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  BSF    03.5
001C:  BSF    1F.0
001D:  BSF    1F.1
001E:  BSF    1F.2
001F:  BCF    1F.3
0020:  MOVLW  07
0021:  MOVWF  1C
0022:  BCF    03.7
....................     while (TRUE) {  
....................         
....................         if(input(A1) == 1 && input(A2) == 0 && input(A3) == 0 && input(A4) == 0) { 
0023:  BSF    05.1
0024:  BCF    03.5
0025:  BTFSS  05.1
0026:  GOTO   042
0027:  BSF    03.5
0028:  BSF    05.2
0029:  BCF    03.5
002A:  BTFSC  05.2
002B:  GOTO   042
002C:  BSF    03.5
002D:  BSF    05.3
002E:  BCF    03.5
002F:  BTFSC  05.3
0030:  GOTO   042
0031:  BSF    03.5
0032:  BSF    05.4
0033:  BCF    03.5
0034:  BTFSC  05.4
0035:  GOTO   042
....................             output_high(B1);  
0036:  BSF    03.5
0037:  BCF    06.1
0038:  BCF    03.5
0039:  BSF    06.1
....................                delay_ms(1000); 
003A:  MOVLW  04
003B:  MOVWF  21
003C:  MOVLW  FA
003D:  MOVWF  22
003E:  CALL   004
003F:  DECFSZ 21,F
0040:  GOTO   03C
....................         }            else{ 
0041:  GOTO   046
....................             output_low(B1); 
0042:  BSF    03.5
0043:  BCF    06.1
0044:  BCF    03.5
0045:  BCF    06.1
....................             } 
....................          
....................         if(input(A1) == 0 && input(A2) == 1 && input(A3) == 0 && input(A4) == 1) { 
0046:  BSF    03.5
0047:  BSF    05.1
0048:  BCF    03.5
0049:  BTFSC  05.1
004A:  GOTO   075
004B:  BSF    03.5
004C:  BSF    05.2
004D:  BCF    03.5
004E:  BTFSS  05.2
004F:  GOTO   075
0050:  BSF    03.5
0051:  BSF    05.3
0052:  BCF    03.5
0053:  BTFSC  05.3
0054:  GOTO   075
0055:  BSF    03.5
0056:  BSF    05.4
0057:  BCF    03.5
0058:  BTFSS  05.4
0059:  GOTO   075
....................             output_high(B2); 
005A:  BSF    03.5
005B:  BCF    06.2
005C:  BCF    03.5
005D:  BSF    06.2
....................             delay_ms(500); 
005E:  MOVLW  02
005F:  MOVWF  21
0060:  MOVLW  FA
0061:  MOVWF  22
0062:  CALL   004
0063:  DECFSZ 21,F
0064:  GOTO   060
....................             output_low(B2); 
0065:  BSF    03.5
0066:  BCF    06.2
0067:  BCF    03.5
0068:  BCF    06.2
....................              
....................             output_high(B1);   
0069:  BSF    03.5
006A:  BCF    06.1
006B:  BCF    03.5
006C:  BSF    06.1
....................             delay_ms(1000); 
006D:  MOVLW  04
006E:  MOVWF  21
006F:  MOVLW  FA
0070:  MOVWF  22
0071:  CALL   004
0072:  DECFSZ 21,F
0073:  GOTO   06F
....................              
....................         } 
0074:  GOTO   079
....................                     else{ 
....................             output_low(B1); 
0075:  BSF    03.5
0076:  BCF    06.1
0077:  BCF    03.5
0078:  BCF    06.1
....................             } 
....................         if(input(A1) == 0 && input(A2) == 0 && input(A3) == 1 && input(A4) == 1) { 
0079:  BSF    03.5
007A:  BSF    05.1
007B:  BCF    03.5
007C:  BTFSC  05.1
007D:  GOTO   0A8
007E:  BSF    03.5
007F:  BSF    05.2
0080:  BCF    03.5
0081:  BTFSC  05.2
0082:  GOTO   0A8
0083:  BSF    03.5
0084:  BSF    05.3
0085:  BCF    03.5
0086:  BTFSS  05.3
0087:  GOTO   0A8
0088:  BSF    03.5
0089:  BSF    05.4
008A:  BCF    03.5
008B:  BTFSS  05.4
008C:  GOTO   0A8
....................             output_high(B3); 
008D:  BSF    03.5
008E:  BCF    06.3
008F:  BCF    03.5
0090:  BSF    06.3
....................             delay_ms(500); 
0091:  MOVLW  02
0092:  MOVWF  21
0093:  MOVLW  FA
0094:  MOVWF  22
0095:  CALL   004
0096:  DECFSZ 21,F
0097:  GOTO   093
....................             output_low(B3); 
0098:  BSF    03.5
0099:  BCF    06.3
009A:  BCF    03.5
009B:  BCF    06.3
....................              
....................             output_high(B1); 
009C:  BSF    03.5
009D:  BCF    06.1
009E:  BCF    03.5
009F:  BSF    06.1
....................                delay_ms(1000); 
00A0:  MOVLW  04
00A1:  MOVWF  21
00A2:  MOVLW  FA
00A3:  MOVWF  22
00A4:  CALL   004
00A5:  DECFSZ 21,F
00A6:  GOTO   0A2
....................              
....................         } 
00A7:  GOTO   0AC
....................                     else{ 
....................             output_low(B1); 
00A8:  BSF    03.5
00A9:  BCF    06.1
00AA:  BCF    03.5
00AB:  BCF    06.1
....................             } 
00AC:  BSF    03.5
00AD:  GOTO   023
....................     } 
.................... } 
00AE:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
