CCS PCM C Compiler, Version 5.015, 5967               16-oct.-24 21:06

               Filename:   C:\Users\Joss\Desktop\Meca\Programacion\Codigos pic\ñ.lst

               ROM used:   31 words (0%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses XT, NOWDT 
.................... #USE DELAY(CLOCK=4M) 
....................  
.................... #define PIN_1 PIN_D0 
....................  
.................... void main() { 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
.................... //And    
....................     while (TRUE) { 
....................         if (input(PIN_1) == 0) { 
000F:  BSF    08.0
0010:  BCF    03.5
0011:  BTFSC  08.0
0012:  GOTO   018
....................             output_high(PIN_D1); 
0013:  BSF    03.5
0014:  BCF    08.1
0015:  BCF    03.5
0016:  BSF    08.1
....................                                                }  
0017:  GOTO   01C
....................             else { 
....................                output_low(PIN_D1); 
0018:  BSF    03.5
0019:  BCF    08.1
001A:  BCF    03.5
001B:  BCF    08.1
....................             } 
001C:  BSF    03.5
001D:  GOTO   00F
.................... } 
.................... } 
001E:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
