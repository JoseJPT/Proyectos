CCS PCM C Compiler, Version 5.015, 5967               16-ene.-25 12:41

               Filename:   C:\Users\Joss\Desktop\Meca\Programacion\Codigos pic\laberinto.lst

               ROM used:   71 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses xt, nowdt, NOPROTECT, NOLVP 
.................... #USE DELAY (CLOCK = 4M) 
....................  
.................... #define A1 PIN_A1  
.................... #define A2 PIN_A2  
.................... #define A3 PIN_A3  
.................... #define A4 PIN_A4  
.................... #define A5 PIN_A5 
.................... #define D1 PIN_D1 
....................  
.................... #define B1 PIN_B1  
.................... #define B2 PIN_B2  
.................... #define B3 PIN_B3  
.................... #define B4 PIN_B4 
.................... #define B5 PIN_B5  
.................... #define B6 PIN_B6  
....................  
.................... void main() { 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
....................     while (TRUE) {  
....................         if (input(A1) == 1) { 
000F:  BSF    05.1
0010:  BCF    03.5
0011:  BTFSS  05.1
0012:  GOTO   017
....................             output_high(B1);  
0013:  BSF    03.5
0014:  BCF    06.1
0015:  BCF    03.5
0016:  BSF    06.1
....................         } 
....................         if (input(A2) == 1) { 
0017:  BSF    03.5
0018:  BSF    05.2
0019:  BCF    03.5
001A:  BTFSS  05.2
001B:  GOTO   020
....................             output_high(B2);  
001C:  BSF    03.5
001D:  BCF    06.2
001E:  BCF    03.5
001F:  BSF    06.2
....................         } 
....................         if (input(A3) == 1) { 
0020:  BSF    03.5
0021:  BSF    05.3
0022:  BCF    03.5
0023:  BTFSS  05.3
0024:  GOTO   029
....................             output_high(B3);  
0025:  BSF    03.5
0026:  BCF    06.3
0027:  BCF    03.5
0028:  BSF    06.3
....................         } 
....................         if (input(A4) == 1) { 
0029:  BSF    03.5
002A:  BSF    05.4
002B:  BCF    03.5
002C:  BTFSS  05.4
002D:  GOTO   032
....................             output_high(B4);  
002E:  BSF    03.5
002F:  BCF    06.4
0030:  BCF    03.5
0031:  BSF    06.4
....................         } 
....................          
....................                 if (input(A5) == 1) { 
0032:  BSF    03.5
0033:  BSF    05.5
0034:  BCF    03.5
0035:  BTFSS  05.5
0036:  GOTO   03B
....................             output_high(B5);  
0037:  BSF    03.5
0038:  BCF    06.5
0039:  BCF    03.5
003A:  BSF    06.5
....................         } 
....................                 if (input(D1) == 1) { 
003B:  BSF    03.5
003C:  BSF    08.1
003D:  BCF    03.5
003E:  BTFSS  08.1
003F:  GOTO   044
....................             output_high(B6);  
0040:  BSF    03.5
0041:  BCF    06.6
0042:  BCF    03.5
0043:  BSF    06.6
....................         } 
0044:  BSF    03.5
0045:  GOTO   00F
....................   
.................... } 
.................... } 
....................  
0046:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
