CCS PCM C Compiler, Version 5.015, 5967               18-nov.-24 11:02

               Filename:   C:\Users\Joss\Desktop\Meca\Programacion\Codigos pic\main.lst

               ROM used:   59 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... #include <16f877a.h>       // Librería para el PIC16F877A 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses hs,nowdt           // Oscilador externo, sin watchdog timer 
.................... #use delay(clock=20M)      // Frecuencia del reloj (4 MHz) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
....................  
.................... #define LED PIN_A4// Define el pin B0 como salida para el LED 
....................  
.................... void main() { 
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  BSF    03.5
001C:  BSF    1F.0
001D:  BSF    1F.1
001E:  BSF    1F.2
001F:  BCF    1F.3
0020:  MOVLW  07
0021:  MOVWF  1C
0022:  BCF    03.7
....................     while(TRUE) { 
....................         output_high(LED);  // Enciende el LED 
0023:  BCF    05.4
0024:  BCF    03.5
0025:  BSF    05.4
....................         delay_ms(500);     // Espera 500 ms 
0026:  MOVLW  02
0027:  MOVWF  21
0028:  MOVLW  FA
0029:  MOVWF  22
002A:  CALL   004
002B:  DECFSZ 21,F
002C:  GOTO   028
....................         output_low(LED);   // Apaga el LED 
002D:  BSF    03.5
002E:  BCF    05.4
002F:  BCF    03.5
0030:  BCF    05.4
....................         delay_ms(500);     // Espera 500 ms 
0031:  MOVLW  02
0032:  MOVWF  21
0033:  MOVLW  FA
0034:  MOVWF  22
0035:  CALL   004
0036:  DECFSZ 21,F
0037:  GOTO   033
0038:  BSF    03.5
0039:  GOTO   023
....................     } 
.................... } 
....................  
003A:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
