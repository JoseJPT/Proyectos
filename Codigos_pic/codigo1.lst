CCS PCM C Compiler, Version 5.015, 5967               29-sep.-24 19:55

               Filename:   C:\Users\Joss\Desktop\Meca\Programacion\Codigos pic\codigo1.lst

               ROM used:   212 words (3%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           6 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses XT, NOWDT 
.................... #USE DELAY(CLOCK=4M)  
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
....................  
.................... #define A0 PIN_A0 
.................... #define D1 PIN_D1 
.................... #define D0 PIN_D0 
.................... #define A1 PIN_A1 
....................  
.................... #define D2 PIN_D2 
.................... #define D3 PIN_D3 
.................... #define B5 PIN_B5 
.................... #define B7 PIN_B7 
....................  
.................... void main(){ 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  MOVLW  19
0008:  BSF    03.5
0009:  MOVWF  19
000A:  MOVLW  A6
000B:  MOVWF  18
000C:  MOVLW  90
000D:  BCF    03.5
000E:  MOVWF  18
000F:  BSF    03.5
0010:  BSF    1F.0
0011:  BSF    1F.1
0012:  BSF    1F.2
0013:  BCF    1F.3
0014:  MOVLW  07
0015:  MOVWF  1C
0016:  BCF    03.7
....................     char data; 
....................     
....................     while(TRUE){ 
....................         if(kbhit()) { 
0017:  BCF    03.5
0018:  BTFSS  0C.5
0019:  GOTO   0D2
....................             data = getc();     
001A:  BTFSS  0C.5
001B:  GOTO   01A
001C:  MOVF   1A,W
001D:  MOVWF  21
....................              
....................  
....................  
....................             if(data == 's') { 
001E:  MOVF   21,W
001F:  SUBLW  73
0020:  BTFSS  03.2
0021:  GOTO   043
....................                 output_high(B5); 
0022:  BSF    03.5
0023:  BCF    06.5
0024:  BCF    03.5
0025:  BSF    06.5
....................                 output_high(A1); 
0026:  BSF    03.5
0027:  BCF    05.1
0028:  BCF    03.5
0029:  BSF    05.1
....................                 output_low(B7); 
002A:  BSF    03.5
002B:  BCF    06.7
002C:  BCF    03.5
002D:  BCF    06.7
....................                 output_low(A0); 
002E:  BSF    03.5
002F:  BCF    05.0
0030:  BCF    03.5
0031:  BCF    05.0
....................                 
....................                 output_low(D2); 
0032:  BSF    03.5
0033:  BCF    08.2
0034:  BCF    03.5
0035:  BCF    08.2
....................                 output_high(D0); 
0036:  BSF    03.5
0037:  BCF    08.0
0038:  BCF    03.5
0039:  BSF    08.0
....................                 output_low(D1); 
003A:  BSF    03.5
003B:  BCF    08.1
003C:  BCF    03.5
003D:  BCF    08.1
....................                 output_high(D3); 
003E:  BSF    03.5
003F:  BCF    08.3
0040:  BCF    03.5
0041:  BSF    08.3
....................       
....................             } 
0042:  GOTO   0D2
....................            else  if(data == 'w') { 
0043:  MOVF   21,W
0044:  SUBLW  77
0045:  BTFSS  03.2
0046:  GOTO   068
....................                 output_low(B5); 
0047:  BSF    03.5
0048:  BCF    06.5
0049:  BCF    03.5
004A:  BCF    06.5
....................                 output_low(A1); 
004B:  BSF    03.5
004C:  BCF    05.1
004D:  BCF    03.5
004E:  BCF    05.1
....................                 output_high(B7); 
004F:  BSF    03.5
0050:  BCF    06.7
0051:  BCF    03.5
0052:  BSF    06.7
....................                 output_high(A0); 
0053:  BSF    03.5
0054:  BCF    05.0
0055:  BCF    03.5
0056:  BSF    05.0
....................                 
....................                 output_high(D2); 
0057:  BSF    03.5
0058:  BCF    08.2
0059:  BCF    03.5
005A:  BSF    08.2
....................                 output_low(D0); 
005B:  BSF    03.5
005C:  BCF    08.0
005D:  BCF    03.5
005E:  BCF    08.0
....................                 output_high(D1); 
005F:  BSF    03.5
0060:  BCF    08.1
0061:  BCF    03.5
0062:  BSF    08.1
....................                 output_low(D3); 
0063:  BSF    03.5
0064:  BCF    08.3
0065:  BCF    03.5
0066:  BCF    08.3
....................             }   
0067:  GOTO   0D2
....................            else if(data == 'd') { 
0068:  MOVF   21,W
0069:  SUBLW  64
006A:  BTFSS  03.2
006B:  GOTO   08D
....................              
....................                output_high(B5); 
006C:  BSF    03.5
006D:  BCF    06.5
006E:  BCF    03.5
006F:  BSF    06.5
....................                 output_low(B7); 
0070:  BSF    03.5
0071:  BCF    06.7
0072:  BCF    03.5
0073:  BCF    06.7
....................                 output_low(A1); 
0074:  BSF    03.5
0075:  BCF    05.1
0076:  BCF    03.5
0077:  BCF    05.1
....................                 output_high(A0); 
0078:  BSF    03.5
0079:  BCF    05.0
007A:  BCF    03.5
007B:  BSF    05.0
....................                 
....................                output_high(D3); 
007C:  BSF    03.5
007D:  BCF    08.3
007E:  BCF    03.5
007F:  BSF    08.3
....................                output_low(D2); 
0080:  BSF    03.5
0081:  BCF    08.2
0082:  BCF    03.5
0083:  BCF    08.2
....................                output_high(D1); 
0084:  BSF    03.5
0085:  BCF    08.1
0086:  BCF    03.5
0087:  BSF    08.1
....................                output_low(D0); 
0088:  BSF    03.5
0089:  BCF    08.0
008A:  BCF    03.5
008B:  BCF    08.0
....................                 
....................             } 
008C:  GOTO   0D2
....................           else  if(data == 'a') { 
008D:  MOVF   21,W
008E:  SUBLW  61
008F:  BTFSS  03.2
0090:  GOTO   0B2
....................              
....................                output_high(B7); 
0091:  BSF    03.5
0092:  BCF    06.7
0093:  BCF    03.5
0094:  BSF    06.7
....................                output_low(B5); 
0095:  BSF    03.5
0096:  BCF    06.5
0097:  BCF    03.5
0098:  BCF    06.5
....................                output_high(A1); 
0099:  BSF    03.5
009A:  BCF    05.1
009B:  BCF    03.5
009C:  BSF    05.1
....................                output_low(A0); 
009D:  BSF    03.5
009E:  BCF    05.0
009F:  BCF    03.5
00A0:  BCF    05.0
....................                 
....................                output_low(D3); 
00A1:  BSF    03.5
00A2:  BCF    08.3
00A3:  BCF    03.5
00A4:  BCF    08.3
....................                output_high(D2); 
00A5:  BSF    03.5
00A6:  BCF    08.2
00A7:  BCF    03.5
00A8:  BSF    08.2
....................                output_low(D1); 
00A9:  BSF    03.5
00AA:  BCF    08.1
00AB:  BCF    03.5
00AC:  BCF    08.1
....................                output_high(D0); 
00AD:  BSF    03.5
00AE:  BCF    08.0
00AF:  BCF    03.5
00B0:  BSF    08.0
....................              
....................             } 
00B1:  GOTO   0D2
....................            else{ 
....................            output_low(A0); 
00B2:  BSF    03.5
00B3:  BCF    05.0
00B4:  BCF    03.5
00B5:  BCF    05.0
....................            output_low(A1); 
00B6:  BSF    03.5
00B7:  BCF    05.1
00B8:  BCF    03.5
00B9:  BCF    05.1
....................            output_low(D0); 
00BA:  BSF    03.5
00BB:  BCF    08.0
00BC:  BCF    03.5
00BD:  BCF    08.0
....................            output_low(D1); 
00BE:  BSF    03.5
00BF:  BCF    08.1
00C0:  BCF    03.5
00C1:  BCF    08.1
....................            output_low(D3); 
00C2:  BSF    03.5
00C3:  BCF    08.3
00C4:  BCF    03.5
00C5:  BCF    08.3
....................            output_low(D2); 
00C6:  BSF    03.5
00C7:  BCF    08.2
00C8:  BCF    03.5
00C9:  BCF    08.2
....................            output_low(B5); 
00CA:  BSF    03.5
00CB:  BCF    06.5
00CC:  BCF    03.5
00CD:  BCF    06.5
....................            output_low(B7); 
00CE:  BSF    03.5
00CF:  BCF    06.7
00D0:  BCF    03.5
00D1:  BCF    06.7
....................             
....................                  
....................             } 
....................          
....................         } 
00D2:  GOTO   018
....................     } 
.................... } 
....................  
00D3:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
