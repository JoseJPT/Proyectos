CCS PCM C Compiler, Version 5.015, 5967               25-jul.-24 07:31

               Filename:   C:\Users\Joss\Desktop\Meca\Programacion\Codigos pic\programa.lst

               ROM used:   22 words (0%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           5 (1%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses XT, NOWDT 
.................... #USE DELAY(CLOCK=4M) 
....................  
.................... void main() { 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
....................     set_tris_d(0x00);  // Configurar todos los pines del puerto D como salida 
000F:  MOVLW  00
0010:  MOVWF  08
....................     output_high(PIN_D0);  // Encender el LED en el pin D0 
0011:  BCF    08.0
0012:  BCF    03.5
0013:  BSF    08.0
....................  
....................     while(TRUE) { 
0014:  GOTO   014
....................         // Bucle infinito para mantener el LED encendido 
....................     } 
.................... } 
....................                 
0015:  SLEEP
....................        
....................     
....................       
....................             
....................  
....................      
....................      
....................      
....................  

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
